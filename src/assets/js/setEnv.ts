/* tslint:disable */
// @ts-nocheck

const { writeFile, existsSync, mkdirSync } = require("fs");
const { argv } = require("yargs");
const githubEnvDirectory = "./src/environments";
const githubEnvProd = "./src/environments/environment.prod.ts";
const githubEnv = "./src/environments/environment.ts";

require("dotenv").config();
const environment = argv.environment;

function writeFileUsingFS(targetPath, envContent) {
    writeFile(targetPath, envContent, (err) => {
        if (err) {
            console.log("setEnv.ts: ", err);
        }

        if (envContent !== "") {
            console.log(`setEnv.ts: Wrote variables to ${targetPath}`);
        }
    });
}

/* Creates the `environments` directory if it does not exist */
if (!existsSync(githubEnvDirectory)) {
    mkdirSync(githubEnvDirectory);
}

/* Creates the `environment.prod.ts` and `environment.ts` file if it does not exist */
writeFileUsingFS(githubEnvProd, "");
writeFileUsingFS(githubEnv, "");

/* Checks whether command line argument of `prod` was provided signifying production mode */
const isProduction = environment === "prod";

/* Choose the correct targetPath based on the environment chosen */
const targetPath = isProduction ? githubEnvProd : githubEnv;

/* Actual content to be compiled dynamically and pasted into respective environment files */
const envContent = `
    // This file was auto-generated by dynamically running setEnv.ts and running dotenv for managing API key privacy

    export const environment = {
        production: ${isProduction},
        FULLPAGE_LICENSE_KEY: ${process.env.FULLPAGE_LICENSE_KEY},
    };
`;

/* Appending data into the target file */
writeFileUsingFS(targetPath, envContent);

/* tslint:enable */